# In axlap/config/suricata/suricata.yaml (relevant part)
# ... (other Suricata config) ...

# External networks - set by install script to 'any' or specific ranges
EXTERNAL_NET: "any"

# Internal networks - set by install script
HOME_NET: "${HOME_NETS_CONFIG_SURICATA}" # Example, will be dynamic

# Path to rules
default-rule-path: /etc/suricata/rules/
rule-files:
  - suricata.rules # Main rules file from suricata-update
  - local.rules    # Custom AXLAP rules, path relative to default-rule-path

# Output configuration
outputs:
  # EVE JSON log based output
  - eve-log:
      enabled: yes
      filetype: regular
      filename: eve.json # Output to /var/log/suricata/eve.json
      types:
        - alert:
            tagged-packets: yes      # Log packets that are tagged by rules (e.g., for packet capture related to an alert)
            metadata: yes            # Include rule metadata (e.g., cve, mitre_tactic_id if present in rule)
            rule-vars: yes           # Output rule variables (e.g., flowbits, counters)
        - http:
            extended: yes     # Include all HTTP request and response fields
        - dns:
            query: yes        # Log DNS query
            answer: yes       # Log DNS answer
            version: 2        # Use DNS log format v2 for more details
        - tls:
            extended: yes     # Include all TLS logging fields (JA3/JA3S hashes, SNI, etc.)
        - files:
            force-magic: no   # Only log magic if available, don't force calculation
            force-md5: no     # Only log MD5 if available
        - drop: {}
        - flow: {}
        - netflow: {} # Requires netflow app-layer enabled
        - ssh: {}
        - smtp: {}

# AF_PACKET settings for capture interface (example for eth0)
af-packet:
  - interface: ${SURICATA_INTERFACE_FROM_ENV:-eth0} # Will be replaced by install.sh or Docker env
    cluster-id: 99 # Unique ID if running multiple Suricata instances on the same interface
    cluster-type: cluster_flow # Distribute flows based on hash
    defrag: yes
    use-mmap: yes

# Engine settings
detect-engine:
  - rule-reload: true # Enable SIGHUP to reload rules without restarting Suricata

# Host OS specific settings.
# Linux
# On Linux, to run Suricata on a specific CPU set, use "taskset -c <cpu-list>".
# Example: taskset -c 0,1,2,3 suricata -c /etc/suricata/suricata.yaml --af-packet
# Or use the cpu_affinity settings below.

cpu-affinity:
  # These settings are highly dependent on the specific hardware and workload.
  # Default is no affinity, kernel scheduler handles it.
  # Test thoroughly if enabling specific affinities.
  # management-cpu-set:
  #   cpu: [ "0" ]
  # receive-cpu-set: # For af-packet, often tied to NIC RSS queues
  #   cpu: [ "0", "1" ]
  # worker-cpu-set:
  #   cpu: [ "all" ] # Use all available cores for worker threads
  #   mode: "exclusive" # Pin each worker to a CPU core if possible
  #   prio:
  #     default: "medium"
